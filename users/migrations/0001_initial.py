# Generated by Django 5.0.6 on 2024-05-17 17:02

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Company',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='company_employees', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('time', models.DateField()),
                ('assigned_day', models.CharField(choices=[('Monday', 'Monday'), ('Tuesday', 'Tuesday'), ('Wednesday', 'Wednesday'), ('Thursday', 'Thursday'), ('Friday', 'Friday'), ('Sunday', 'Sunday')], max_length=10)),
                ('groups', models.ManyToManyField(related_name='customuser_groups', to='auth.group')),
                ('user_permissions', models.ManyToManyField(related_name='customuser_permissions', to='auth.permission')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Inbound',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('total_shipments_in_asn', models.CharField(blank=True, max_length=255, null=True)),
                ('arrived', models.CharField(blank=True, max_length=255, null=True)),
                ('no_show', models.CharField(blank=True, max_length=255, null=True)),
                ('received_completely', models.CharField(blank=True, max_length=255, null=True)),
                ('regected_completely', models.CharField(blank=True, max_length=255, null=True)),
                ('received_partially', models.CharField(blank=True, max_length=255, null=True)),
                ('under_tamer_inspection', models.CharField(blank=True, max_length=255, null=True)),
                ('waiting_for_mod_inspection', models.CharField(blank=True, max_length=255, null=True)),
                ('waiting_for_NUPCO_action', models.CharField(blank=True, max_length=255, null=True)),
                ('total_dash_of_GR_reports_shared', models.CharField(blank=True, max_length=255, null=True)),
                ('dash_of_GR_reports_with_discripancy', models.CharField(blank=True, max_length=255, null=True)),
                ('total_SKUS_received', models.CharField(blank=True, max_length=255, null=True)),
                ('dash_of_skus_damaged_during_receiving', models.CharField(blank=True, max_length=255, null=True)),
                ('total_received_with_putaway', models.CharField(blank=True, max_length=255, null=True)),
                ('custom_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='inbound_data', to='users.customuser')),
            ],
        ),
        migrations.AddField(
            model_name='customuser',
            name='inbound_entries',
            field=models.ManyToManyField(related_name='inbound_entries_customuser', to='users.inbound'),
        ),
        migrations.CreateModel(
            name='Owner',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('can_view_all_companies', models.BooleanField(default=False)),
                ('total_quantities', models.CharField(max_length=255)),
                ('owner', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='owner_profile', to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
